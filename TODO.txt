# TODO List:
  
Sensor(Embedded Software)
  -Tune Cfilter
  -Consider characterising the noise in each axis
  -Vibration testing/ re-tune when the PID works?
  -Consider Kalman Filter? -can probably steal from other repo
  
  
LIPO contol with MKR VIDOR
  -assess battery options?

CMND/STATUS (Embedded Software/ Ground Software)
&&&****ADD ARDUINO_SECRETS TO GITIGNORE****&&&
    - get UDP to PC working. (bi-directional)  WIFI_NINA
    
    - create a struct for telem: https://forum.arduino.cc/index.php?topic=42681.0
    add a function for easy JSON creation.
    
    struct record//type
    {
       float ms,
       float x,
       ...
    };
    typedef struct record Record;
    Record rinstance;//instantiate a struct of type record
    
    char start='{';
    String end="}\n";
    char comma=',';
    
    char* id[]={
      "\"ms\"", //time
      "\"te\"", //telem
      "\"cx\"", //measured x
      "\"cy\"", //measured y
      "\"cz\"", //measured x
      "\"dx\"", //desired x
      "\"dy\"", //desired y
      "\"dz\"", //desired z
      "\"dt\"", //desired throttle
    }
    
    int create_json(mytype data){
      String str ="";
      str.concat(start);
      
      str.concat(id[1]);
      str.concat(data.time);
      str.concat(comma);
      
      str.concat(id[2]);
      str.concat(data.x);
      str.concat(comma);
      ...
      str.concat(end);
    }
    
    
"This is string 4", "This is string 5","This is string 6"};
        
    
    -add failsafe for loosing connection/ corrupt data
    
    - Side task: get a streaming ability to server mysql to capture timestamps and values.  Accept JSON in the following format?:
      {"time":,"telem":{"cx": , "cy":, "cz":, "dx":,"dy":,"dz":,"dt":...}}
         time(ms)   measured pos(deg),    desired pos(deg),   desired throtle(deg)
         Plot the MYSQL values>? need to make a db.
    
PWM (Embedded Software)
  -test arduino libraries with ESC 
  -test vidor output(5v pwm vs 3v3)!!
  -Create function/wrapper for writing to the ESCs
  -Create Calibrate ESC function
  
PID (Embedded Software)
  -Impliment Flight Controller (one per axis?)
  -esure KI windup cannot happen on the ground
  -Tune
  
General (Embedded Software)
  -add failsafe for loosing connection/ corrupt data

Hardware
  -Use Protoboard
  -Buy headers (4x3PIN for ESCs), potentially more for redundancy, RC controller
  -Buy RC contoller
  -Mount the IMU on rubber onto the protoboard. Consider soldering in place to add mass and ruberixing the whole flight board?
  -Charge batteries
  -Add "RollCage" Before flight
  -Add "Killswitch" before flight
  
  
  
  Done
    -Read Gyro/Accelerometer
  
    
  
  
  


